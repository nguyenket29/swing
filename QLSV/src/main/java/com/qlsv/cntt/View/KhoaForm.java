/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.qlsv.cntt.View;

import com.qlsv.cntt.Controller.ConnectDB;
import com.qlsv.cntt.Dao.KhoaDAO;
import com.qlsv.cntt.Hepler.InforLogin;
import com.qlsv.cntt.Hepler.MesageHepler;
import com.qlsv.cntt.Hepler.Validator;
import com.qlsv.cntt.model.Khoa;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NguyenCongPC
 */
public class KhoaForm extends javax.swing.JPanel {

    private MenuForm menuForm;
    DefaultTableModel tableModel;

    /**
     * Creates new form KhoaForm
     */
    public KhoaForm() {
        initComponents();
        if(InforLogin.taiKhoan.getVaiTro().equals("Sinh Viên")){
            btnSua.setEnabled(false);
            btnXoa.setEnabled(false);
            btnThem.setEnabled(false);
        }
        initTable();
        showAll();
    }

    private void initTable() {
        tableModel = new DefaultTableModel();
        tableModel.setColumnIdentifiers(new String[]{"Mã Khoa", "Tên Khoa"});
        tblSubjects.setModel(tableModel);
    }

    private void showAll() {
        try {
            Connection con = ConnectDB.ConnectionDB();
            String sql = "select * from Khoa";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            tableModel.setRowCount(0);
            while (rs.next()) {
                String[] row = new String[]{
                    rs.getString("MaKhoa"), rs.getString("TenKhoa")
                };
                tableModel.addRow(row);
            }
            tableModel.fireTableDataChanged();
            rs.close();
            ps.close();
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private boolean search() {
        PreparedStatement ps = null;
        Connection con = ConnectDB.ConnectionDB();
        if (con != null) {
            try {
                tableModel.setRowCount(0);
                String sql = "SELECT * FROM Khoa WHERE MaKhoa = ?";
                ps = con.prepareStatement(sql);
                ps.setString(1, txtMaKhoa.getText());
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    Vector vector = new Vector();
                    vector.add(rs.getString(1));
                    vector.add(rs.getString(2));
                    tableModel.addRow(vector);
                    return true;
                }
                tableModel.fireTableDataChanged();
                rs.close();
                ps.close();
                con.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                e.printStackTrace();
            }
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMaKhoa = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtKhoa = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSubjects = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jLabel1.setText("Mã Khoa:");

        jLabel2.setText("Tên Khoa:");

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnHuy.setText("Hủy Bỏ");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon("D:\\Netbean Practive\\QLSV\\src\\main\\java\\com\\qlsv\\cntt\\icon\\search_book_open_search_locate_6178.png")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(txtKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMaKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(75, 75, 75)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSua, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSua)
                            .addComponent(btnXoa))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnHuy)
                            .addComponent(btnThem))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTimKiem))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtMaKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane1.setBackground(new java.awt.Color(0, 204, 204));

        tblSubjects.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblSubjects);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        StringBuilder builder = new StringBuilder();
        Validator.validatorEmpty(txtMaKhoa, builder, "Mã môn học không được để trống");

        if (builder.length() > 0) {
            MesageHepler.showErrorDialog(menuForm, builder.toString(), "Lỗi !");
            return;
        }

        try {
            Khoa sj = new Khoa();
            sj.setMaKhoa(txtMaKhoa.getText());
            sj.setTenKhoa(txtKhoa.getText());
            KhoaDAO dao = new KhoaDAO();
            if (dao.save(sj)) {
                MesageHepler.showMessageDialog(menuForm, "Khoa Đã Được Thêm", "Thông báo !");
            } else {
                MesageHepler.showConfirmDialog(menuForm, "Khoa chưa được thêm", "Cảnh báo !");
            }
            showAll();
        } catch (Exception e) {
            e.printStackTrace();
            MesageHepler.showErrorDialog(menuForm, e.getMessage(), "Lỗi !");
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        if (tblSubjects.getSelectedRow() == -1) {
            MesageHepler.showMessageDialog(menuForm, "Hãy chọn một dòng để xóa", "Thông báo !");
        } else if (tblSubjects.getSelectedRowCount() == 0) {
            MesageHepler.showMessageDialog(menuForm, "Không có dữ liệu để xóa", "Thông báo !");
        } else {
            try {
                String msv = tblSubjects.getModel()
                        .getValueAt(tblSubjects.getSelectedRow(), 0).toString();
                KhoaDAO dao = new KhoaDAO();
                if (dao.delete(msv)) {
                    MesageHepler.showMessageDialog(menuForm, "Xóa thành công", "Thông báo !");
                    showAll();
                } else {
                    MesageHepler.showMessageDialog(menuForm, "Xóa thất bại", "Cảnh báo !");
                }
            } catch (Exception ex) {
                Logger.getLogger(CoreForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        StringBuilder builder = new StringBuilder();
        Validator.validatorEmpty(txtMaKhoa, builder, "Mã môn học không được để trống");

        if (builder.length() > 0) {
            MesageHepler.showErrorDialog(menuForm, builder.toString(), "Lỗi !");
            return;
        }

        if (JOptionPane.showConfirmDialog(this, "Xác nhận cập nhật môn học !")
                == JOptionPane.NO_OPTION) {
            return;
        }

        Khoa sj = new Khoa();
        sj.setMaKhoa(txtMaKhoa.getText());
        sj.setTenKhoa(txtKhoa.getText());
        KhoaDAO dao = new KhoaDAO();
        try {
            if (dao.update(sj)) {
                MesageHepler.showMessageDialog(menuForm, "Khoa Đã Được Chỉnh Sửa", "Thông báo !");
            } else {
                MesageHepler.showConfirmDialog(menuForm, "Khoa chưa được chỉnh sửa", "Cảnh báo !");
            }
            showAll();
        } catch (Exception ex) {
            Logger.getLogger(SubjectsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        txtMaKhoa.setText("");
        txtKhoa.setText("");
    }//GEN-LAST:event_btnHuyActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        StringBuilder builder = new StringBuilder();
        Validator.validatorEmpty(txtMaKhoa, builder, "Mã môn học không được để trống");

        if (builder.length() > 0) {
            MesageHepler.showErrorDialog(menuForm, builder.toString(), "Lỗi !");
            return;
        }

        try {
            if (search()) {
                MesageHepler.showMessageDialog(menuForm, "Tìm thấy", "Thông báo !");
            } else {
                MesageHepler.showMessageDialog(menuForm, "Không Tìm Thấy", "Cảnh báo !");
            }
        } catch (Exception e) {
            e.printStackTrace();
            MesageHepler.showErrorDialog(menuForm, e.getMessage(), "Lỗi !");
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSubjects;
    private javax.swing.JTextField txtKhoa;
    private javax.swing.JTextField txtMaKhoa;
    // End of variables declaration//GEN-END:variables
}
